auth.onAuthStateChanged((e=>{e&&handleAuthenticatedUser(e)}));const inputContainers=document.querySelectorAll(".input-container"),loginForm=document.querySelector("#login-form"),recoverPasswordBtn=document.querySelector("[data-recover-password-btn]"),registerForm=document.querySelector("#register-form"),toggleFormsBtns=document.querySelectorAll("[data-toggle-btn]");function setFormLoadingState(e,t){e.innerHTML='<span class="material-icons rotate">rotate_right</span> Carregando...',t.classList.add("hidden"),t.innerText=""}function handleAuthenticatedUser(e){localStorage.setItem("user_data",JSON.stringify(e)),window.location.href="pages/task.html"}function handleLoginResponse(e,t,r){localStorage.setItem("user_data",JSON.stringify(e.user)),window.location.href="pages/task.html"}function handleLoginError(e,t,r){"auth/invalid-credential"===e.code&&(r.classList.remove("hidden"),r.innerText="Usuário não encontrado"),t.innerHTML="Login"}function handleRegistrationSuccess(e,t){t.innerHTML="Registrar-se"}function handleRegistrationError(e,t,r){console.log(e),"auth/email-already-in-use"===e.code?(t.classList.remove("hidden"),t.innerText="O e-mail fornecido já está em uso"):"auth/invalid-password"===e.code&&(t.classList.remove("hidden"),t.innerText="A senha deve conter pelo menos 6 caracteres"),r.innerHTML="Registrar-se"}function login(){const e=loginForm.querySelector("[data-email]"),t=loginForm.querySelector("[data-password]"),r=loginForm.querySelector("[data-btn]"),n=loginForm.querySelector("[data-message]");setFormLoadingState(r,n),localStorage.removeItem("user_data"),auth.signInWithEmailAndPassword(e.value,t.value).then((e=>handleLoginResponse(e,r,n))).catch((e=>handleLoginError(e,r,n)))}function register(){const e=registerForm.querySelector("[data-email]"),t=registerForm.querySelector("[data-password]"),r=registerForm.querySelector("[data-btn]"),n=registerForm.querySelector("[data-message]");setFormLoadingState(r,n),auth.createUserWithEmailAndPassword(e.value,t.value).then((()=>handleRegistrationSuccess(n,r))).catch((e=>handleRegistrationError(e,n,r)))}loginForm.addEventListener("submit",(e=>{e.preventDefault(),login()})),registerForm.addEventListener("submit",(e=>{e.preventDefault(),register()})),toggleFormsBtns.forEach((e=>{e.addEventListener("click",(function(){const e=this.dataset.toggleForm;document.body.dataset.form=e}))})),recoverPasswordBtn.addEventListener("click",(()=>{const e=loginForm.querySelector("[data-email]"),t=loginForm.querySelector("[data-message]"),r=loginForm.querySelector("[data-btn]");if(setFormLoadingState(r,t),!e.value)return t.classList.remove("hidden"),t.innerText="O campo email deve ser preenchido",void(r.innerHTML="Login");auth.sendPasswordResetEmail(e.value).then((()=>{t.classList.remove("hidden"),t.innerText="Email de redefinição de senha enviado",r.innerHTML="Login"})).catch((e=>{console.error(e),r.innerHTML="Login"}))})),inputContainers.forEach((e=>{const t=e.querySelector("input"),r=e.querySelector("label");t.addEventListener("focus",(function(){r.classList.add("animate","animate-color")})),t.addEventListener("blur",(function(){this.value||r.classList.remove("animate"),r.classList.remove("animate-color")}))}));